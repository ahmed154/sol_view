-- FUNCTION: acc.fnc_jor_delete(character varying, character varying, character varying)

-- DROP FUNCTION acc.fnc_jor_delete(character varying, character varying, character varying);

CREATE OR REPLACE FUNCTION acc.fnc_jor_delete(
	in_id character varying,
	in_company_id character varying,
	in_user_id character varying)
    RETURNS SETOF acc.viw_jor_select 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

declare 
	on_edit_id integer;
	on_jorD_id integer;
	on_servertime timestamp; 
	on_yyyy text;
	on_yy text;
	on_MM text;
	on_ref text;
	on_jorRefType text;
	on_sequ smallint;
	on_xsequ text;
	on_audit_id bigint;
--------------------------------------------
	ex_id integer;
	ex_sqlstate text;
	ex_colname text; 
	ex_constraintname text; 
	ex_datatype text; 
	ex_msgtext text; 
	ex_tablename text; 
	ex_schemaname text; 
	ex_details text; 
	ex_hint text; 
	ex_context text; 
BEGIN
	ex_id = (select(select max(id) from grl.tbl_ex) + 1); if ex_id is null then ex_id = 1; end if;
	on_edit_id = (select(select max(id) from acc.tbl_joredit) + 1); if on_edit_id is null then on_edit_id = 1; end if;
	on_audit_id = (select(select max(id) from grl.tbl_audit) + 1); if on_audit_id is null then on_audit_id = 1; end if;
	on_servertime = (select(current_timestamp));					 					 
------------------------------------------------------------------------------------------------------INSERT INTO joredit
INSERT INTO acc.tbl_joredit(
	id, jor_id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, editingtime, editservertime, 
	createuser_id, edituser_id, edit, delete)
SELECT on_edit_id, id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, on_servertime, on_servertime, 
	createuser_id, in_user_id, edit, 1
	FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
	
DELETE FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
DELETE FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
------------------------------------------------------------------------------------------------------INSERT INTO jordedit
INSERT INTO acc.tbl_jordedit(
	jord_id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref,notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, editingtime, editservertime,createuser_id, edituser_id, edit, delete)
	
SELECT id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref, notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, on_servertime, on_servertime, createuser_id, in_user_id, edit, 1
	FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
	

------------------------------------------------------------------------------------------------------INSERT INTO audit
INSERT INTO grl.tbl_audit(
	id, eventtime, eventtype_id, doctype_id, doc_id, user_id, company_id)
	VALUES (on_audit_id, on_servertime, 32, 10, in_id, in_user_id, in_company_id);
------------------------------------------------------------------------------------------------------Success Return
RETURN QUERY select * from acc.viw_jor_Select where h_id = in_id;
------------------------------------------------------------------------------------------------------EX
EXCEPTION WHEN OTHERS THEN
	GET STACKED DIAGNOSTICS
		ex_sqlstate = RETURNED_SQLSTATE,
		ex_colname = COLUMN_NAME,
		ex_constraintname = CONSTRAINT_NAME,
		ex_datatype = PG_DATATYPE_NAME,
		ex_msgtext = MESSAGE_TEXT,
		ex_tablename = TABLE_NAME,
		ex_schemaname = SCHEMA_NAME,
		ex_details = PG_EXCEPTION_DETAIL,
		ex_hint = PG_EXCEPTION_HINT,
		ex_context = PG_EXCEPTION_CONTEXT;
	DROP TABLE IF EXISTS temp_EX;
	CREATE TEMP TABLE temp_EX as SELECT * from acc.viw_jor_Select where h_id = '0';
	INSERT INTO temp_EX(h_notes)VALUES('PostgreSQL'||','|| ex_id || ',' || ex_sqlstate || ',' || ex_msgtext || ',' || ex_context);
------------------------------------------------------------------------------------------------------INSERT INTO ex
INSERT INTO grl.tbl_ex(
id, sqlstate, colname, constraintname, datatype, msgtext, tablename, schemaname, details, hint, context, extime, company_id, branche_id, store_id, user_id, eventtype_id, doc_id)
VALUES(ex_id, ex_sqlstate, ex_colname, ex_constraintname, ex_datatype, ex_msgtext, ex_tablename, ex_schemaname, ex_details, ex_hint, ex_context, on_servertime, in_company_id, null, null, in_user_id,32, in_id);
------------------------------------------------------------------------------------------------------Faild Return
return QUERY select * from temp_EX;
End

$BODY$;

ALTER FUNCTION acc.fnc_jor_delete(character varying, character varying, character varying)
    OWNER TO postgres;
