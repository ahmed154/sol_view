DROP FUNCTION IF EXISTS acc.fnc_jor_insert(character varying, character varying, numeric, text, text, character varying, character varying, character varying, character varying, character varying, timestamp without time zone, character varying, json);
DROP FUNCTION IF EXISTS acc.fnc_jor_update(character varying, character varying, numeric, text, text, character varying, character varying, character varying, character varying, character varying, timestamp without time zone, character varying, json);
DROP FUNCTION IF EXISTS acc.fnc_jor_delete(character varying, character varying, character varying);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION acc.fnc_jor_insert(
	in_id character varying,
	in_currency_id character varying,
	in_currencyprice numeric,
	in_jortype_id text,
	in_notes text,
	in_company_id character varying,
	in_fyear_id character varying,
	in_branch_id character varying,
	in_cc1_id character varying,
	in_cc2_id character varying,
	in_creationtime timestamp without time zone,
	in_user_id character varying,
	in_jord json)
    RETURNS SETOF acc.viw_jor_select 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

declare 
	on_jorD_id integer;
	on_servertime timestamp; 
	on_yyyy text;
	on_yy text;
	on_MM text;
	on_ref text;
	on_jorRefType text;
	on_sequ smallint;
	on_xsequ text;
	on_audit_id bigint;
-------------------------------------------
	i jsonb;
	on_jorD_debit numeric;
	on_jorD_credit numeric;
	on_jorD_chart_id text;
	on_jorD_notes text;
	on_jorD_cc1_id text;
	on_jorD_cc2_id text;
	on_jorD_branch_id text;
--------------------------------------------
	ex_id integer;
	ex_sqlstate text;
	ex_colname text; 
	ex_constraintname text; 
	ex_datatype text; 
	ex_msgtext text; 
	ex_tablename text; 
	ex_schemaname text; 
	ex_details text; 
	ex_hint text; 
	ex_context text; 
BEGIN
	ex_id = (select(select max(id) from grl.tbl_ex) + 1); if ex_id is null then ex_id = 1; end if;
	on_audit_id = (select(select max(id) from grl.tbl_audit) + 1); if on_audit_id is null then on_audit_id = 1; end if;
	on_jorD_id = (select(select max(id) from acc.tbl_jorD) + 1); if on_jorD_id is null then on_jorD_id = 1; end if;
	on_servertime = (select(current_timestamp));
	
	on_yyyy = (select extract(year from   in_creationtime));
	on_MM = (select extract(month from   in_creationtime));
	on_MM = (select case when (length(on_MM) = 1) then (select concat('0',on_MM)) else on_MM end);
	on_ref = '000';
													
		
	--on_yy = (select substring(on_yyyy from 3 for 2));
	on_yy = (select substring((select extract(year from (select beigndate from grl.tbl_fyears where id = in_fyear_id))::text) from 3 for 2));	
													
	
	--on_sequ = (select(select max(sequ) from acc.tbl_jor
					  --where company_id = in_company_id
					  --and branch_id = in_branch_id
					  --and yyyy = on_yyyy
					  --and mm = on_MM
					  --and ref = on_ref			   
					 --) + 1);
					 
	on_sequ = (select(select max(sequ) from acc.tbl_jor
					  WHERE company_id = in_company_id	
					  AND branch_id = in_branch_id
					  AND fyear_id = in_fyear_id
					 ) + 1);
    on_sequ = (select case when (on_sequ is NULL) then 1 else on_sequ end);
	on_xsequ = on_sequ::text;	
	on_xsequ = repeat('0', 5 - length(on_xsequ)) || on_xsequ;
									
					 					 

	--in_id = (in_branch_id || on_yy || on_MM || on_ref || on_xsequ);
							  
	in_id = (in_branch_id || on_yy || on_xsequ);
								
							  
	WHILE exists(select * from acc.tbl_cin where postedjor_id = in_id)
	loop
		on_sequ = on_sequ + 1;
		on_xsequ = on_sequ::text;
		on_xsequ = repeat('0', 5 - length(on_xsequ)) || on_xsequ;
		in_id = (in_branch_id || on_yy || on_xsequ);
	end loop;	
							  
	WHILE exists(select * from acc.tbl_cout where postedjor_id = in_id)
	loop
		on_sequ = on_sequ + 1;
		on_xsequ = on_sequ::text;
		on_xsequ = repeat('0', 5 - length(on_xsequ)) || on_xsequ;								  
		in_id = (in_branch_id || on_yy || on_xsequ);
	end loop;	
------------------------------------------------------------------------------------------------------INSERT INTO jor 
INSERT INTO acc.tbl_jor(
	id, 
	sequ, 
	currency_id, 
	currencyprice, 
	jortype_id, 
	yyyy,
	MM,
	ref,
	notes, 
	company_id, 
	fyear_id, 
	branch_id, 
	cc1_id, 
	cc2_id, 
	creationtime, 
	createservertime, 
	createuser_id)
	VALUES (
		in_id, 
		on_sequ, 
		in_currency_id, 
		in_currencyprice, 
		in_jortype_id,
		on_yyyy,
		on_MM,
		on_ref,
		in_notes,
		in_company_id, 
		in_fyear_id, 
		in_branch_id, 
		in_cc1_id, 
		in_cc2_id, 
		in_creationtime, 
		on_servertime, 
		in_user_id);
------------------------------------------------------------------------------------------------------INSERT INTO jorD 
FOR i IN SELECT * FROM json_array_elements(in_jord)
  LOOP
  	on_jorD_debit := i->>'debit';
    on_jorD_credit := i->>'credit';
    on_jorD_chart_id := i->>'chart_id';
    on_jorD_notes := i->>'notes';
    on_jorD_cc1_id := i->>'cc1_id';
    on_jorD_cc2_id := i->>'cc2_id';
    on_jorD_branch_id := i->>'branch_id';
	
 	on_jorD_debit = (select case when (on_jorD_debit IS NULL) THEN 0 else on_jorD_debit end);
	on_jorD_credit = (select case when (on_jorD_credit IS NULL) THEN 0 else on_jorD_credit end);
	on_jorD_notes = (select case when (on_jorD_notes IS NULL OR on_jorD_notes = '') THEN in_notes else on_jorD_notes end);
	on_jorD_cc1_id = (select case when (on_jorD_cc1_id IS NULL OR on_jorD_cc1_id = '') THEN in_cc1_id else on_jorD_cc1_id end);
	on_jorD_cc2_id = (select case when (on_jorD_cc2_id IS NULL OR on_jorD_cc2_id = '') THEN in_cc2_id else on_jorD_cc2_id end);
	on_jorD_branch_id = (select case when (on_jorD_branch_id IS NULL OR on_jorD_branch_id = '') THEN in_branch_id else on_jorD_branch_id end);
	
	INSERT INTO acc.tbl_jord(
	id, 
	jor_id, 
	debit, 
	credit, 
	chart_id, 
	currency_id, 
	currencyprice, 
	jortype_id, 
	yyyy,
	MM,
	ref,
	notes, 
	company_id, 
	fyear_id, 
	branch_id, 
	cc1_id, 
	cc2_id, 
	creationtime, 
	createservertime, 
	createuser_id )
	VALUES (
		on_jorD_id, 
		in_id, 
		on_jorD_debit, 
		on_jorD_credit, 
		on_jorD_chart_id, 	
		in_currency_id, 
		in_currencyprice, 
		in_jortype_id, 
		on_yyyy,
		on_MM,
		on_ref,
		on_jorD_notes, 	
		in_company_id, 
		in_fyear_id,
		on_jorD_branch_id, 
		on_jorD_cc1_id, 
		on_jorD_cc2_id, 
		in_creationtime, 
		on_servertime, 
		in_user_id);
		
	on_jorD_id = on_jorD_id + 1;
 END LOOP;
------------------------------------------------------------------------------------------------------INSERT INTO audit
INSERT INTO grl.tbl_audit(
	id, eventtime, eventtype_id, doctype_id, doc_id, user_id, company_id)
	VALUES (on_audit_id, on_servertime, 30, 10, in_id, in_user_id, in_company_id);
------------------------------------------------------------------------------------------------------Success Return
RETURN QUERY select * from acc.viw_jor_Select where h_id = in_id AND h_company_id = in_company_id AND company_id = in_company_id;
------------------------------------------------------------------------------------------------------EX
EXCEPTION WHEN OTHERS THEN
	GET STACKED DIAGNOSTICS
		ex_sqlstate = RETURNED_SQLSTATE,
		ex_colname = COLUMN_NAME,
		ex_constraintname = CONSTRAINT_NAME,
		ex_datatype = PG_DATATYPE_NAME,
		ex_msgtext = MESSAGE_TEXT,
		ex_tablename = TABLE_NAME,
		ex_schemaname = SCHEMA_NAME,
		ex_details = PG_EXCEPTION_DETAIL,
		ex_hint = PG_EXCEPTION_HINT,
		ex_context = PG_EXCEPTION_CONTEXT;
	DROP TABLE IF EXISTS temp_EX;
	CREATE TEMP TABLE temp_EX as SELECT * from acc.viw_jor_Select where h_id = '0';
	INSERT INTO temp_EX(h_notes)VALUES('PostgreSQL'||','|| ex_id || ',' || ex_sqlstate || ',' || ex_msgtext || ',' || ex_context);
------------------------------------------------------------------------------------------------------INSERT INTO ex
INSERT INTO grl.tbl_ex(
id, sqlstate, colname, constraintname, datatype, msgtext, tablename, schemaname, details, hint, context, extime, company_id, branche_id, store_id, user_id, eventtype_id, doc_id)
VALUES(ex_id, ex_sqlstate, ex_colname, ex_constraintname, ex_datatype, ex_msgtext, ex_tablename, ex_schemaname, ex_details, ex_hint, ex_context, on_servertime, in_company_id, in_branch_id, null, in_user_id,30, in_id);
------------------------------------------------------------------------------------------------------Faild Return
return QUERY select * from temp_EX;
End

$BODY$;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION acc.fnc_jor_update(
	in_id character varying,
	in_currency_id character varying,
	in_currencyprice numeric,
	in_jortype_id text,
	in_notes text,
	in_company_id character varying,
	in_fyear_id character varying,
	in_branch_id character varying,
	in_cc1_id character varying,
	in_cc2_id character varying,
	in_creationtime timestamp without time zone,
	in_user_id character varying,
	in_jord json)
    RETURNS SETOF acc.viw_jor_select 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

declare 
	on_current_edit smallint;
	on_edit_id integer;
	on_jorD_id integer;
	on_servertime timestamp; 
	on_yyyy text;
	on_yy text;
	on_MM text;
	on_ref text;
	on_jorRefType text;
	on_sequ smallint;
	on_xsequ text;
	on_audit_id bigint;
-------------------------------------------
	i jsonb;
	on_jorD_debit numeric;
	on_jorD_credit numeric;
	on_jorD_chart_id text;
	on_jorD_notes text;
	on_jorD_cc1_id text;
	on_jorD_cc2_id text;
	on_jorD_branch_id text;
--------------------------------------------
	ex_id integer;
	ex_sqlstate text;
	ex_colname text; 
	ex_constraintname text; 
	ex_datatype text; 
	ex_msgtext text; 
	ex_tablename text; 
	ex_schemaname text; 
	ex_details text; 
	ex_hint text; 
	ex_context text; 
BEGIN
	ex_id = (select(select max(id) from grl.tbl_ex) + 1); if ex_id is null then ex_id = 1; end if;
	on_edit_id = (select(select max(id) from acc.tbl_joredit) + 1); if on_edit_id is null then on_edit_id = 1; end if;
	on_audit_id = (select(select max(id) from grl.tbl_audit) + 1); if on_audit_id is null then on_audit_id = 1; end if;
	on_jorD_id = (select(select max(id) from acc.tbl_jorD) + 1); if on_jorD_id is null then on_jorD_id = 1; end if;
	on_servertime = (select(current_timestamp));
	on_current_edit = (select(select edit from acc.tbl_jor  WHERE id = in_id AND company_id = in_company_id) + 1);
	
	on_yyyy = (select extract(year from   in_creationtime));
	on_MM = (select extract(month from   in_creationtime));
	on_MM = (select case when (length(on_MM) = 1) then (select concat('0',on_MM)) else on_MM end);
	on_ref = '000';
	
	on_sequ = (select sequ from acc.tbl_jor WHERE id = in_id AND company_id = in_company_id);					 					 
------------------------------------------------------------------------------------------------------INSERT INTO joredit
INSERT INTO acc.tbl_joredit(
	id, jor_id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, editingtime, editservertime, 
	createuser_id, edituser_id, edit)
SELECT on_edit_id, id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, in_creationtime, on_servertime, 
	createuser_id, in_user_id, on_current_edit
	FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
------------------------------------------------------------------------------------------------------INSERT INTO jordedit
INSERT INTO acc.tbl_jordedit(
	jord_id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref,notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, editingtime, editservertime,createuser_id, edituser_id, edit)
	
SELECT id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref, notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, in_creationtime, on_servertime, createuser_id, in_user_id, on_current_edit
	FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
	
DELETE FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
DELETE FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
------------------------------------------------------------------------------------------------------INSERT INTO jor
INSERT INTO acc.tbl_jor(
	id, 
	sequ, 
	currency_id, 
	currencyprice, 
	jortype_id, 
	yyyy,
	MM,
	ref,
	notes, 
	company_id, 
	fyear_id, 
	branch_id, 
	cc1_id, 
	cc2_id, 
	creationtime, 
	createservertime, 
	createuser_id)
	VALUES (
		in_id, 
		on_sequ, 
		in_currency_id, 
		in_currencyprice, 
		in_jortype_id,
		on_yyyy,
		on_MM,
		on_ref,
		in_notes,
		in_company_id, 
		in_fyear_id, 
		in_branch_id, 
		in_cc1_id, 
		in_cc2_id, 
		in_creationtime, 
		on_servertime, 
		in_user_id);
------------------------------------------------------------------------------------------------------INSERT INTO jorD 
FOR i IN SELECT * FROM json_array_elements(in_jord)
  LOOP
  	on_jorD_debit := i->>'debit';
    on_jorD_credit := i->>'credit';
    on_jorD_chart_id := i->>'chart_id';
    on_jorD_notes := i->>'notes';
    on_jorD_cc1_id := i->>'cc1_id';
    on_jorD_cc2_id := i->>'cc2_id';
    on_jorD_branch_id := i->>'branch_id';
	
 	on_jorD_debit = (select case when (on_jorD_debit IS NULL) THEN 0 else on_jorD_debit end);
	on_jorD_credit = (select case when (on_jorD_credit IS NULL) THEN 0 else on_jorD_credit end);
	on_jorD_notes = (select case when (on_jorD_notes IS NULL OR on_jorD_notes = '') THEN in_notes else on_jorD_notes end);
	on_jorD_cc1_id = (select case when (on_jorD_cc1_id IS NULL OR on_jorD_cc1_id = '') THEN in_cc1_id else on_jorD_cc1_id end);
	on_jorD_cc2_id = (select case when (on_jorD_cc2_id IS NULL OR on_jorD_cc2_id = '') THEN in_cc2_id else on_jorD_cc2_id end);
	on_jorD_branch_id = (select case when (on_jorD_branch_id IS NULL OR on_jorD_branch_id = '') THEN in_branch_id else on_jorD_branch_id end);
	
	INSERT INTO acc.tbl_jord(
	id, 
	jor_id, 
	debit, 
	credit, 
	chart_id, 
	currency_id, 
	currencyprice, 
	jortype_id, 
	yyyy,
	MM,
	ref,
	notes, 
	company_id, 
	fyear_id, 
	branch_id, 
	cc1_id, 
	cc2_id, 
	creationtime, 
	createservertime, 
	createuser_id )
	VALUES (
		on_jorD_id, 
		in_id, 
		on_jorD_debit, 
		on_jorD_credit, 
		on_jorD_chart_id, 	
		in_currency_id, 
		in_currencyprice, 
		in_jortype_id, 
		on_yyyy,
		on_MM,
		on_ref,
		on_jorD_notes, 	
		in_company_id, 
		in_fyear_id,
		on_jorD_branch_id, 
		on_jorD_cc1_id, 
		on_jorD_cc2_id, 
		in_creationtime, 
		on_servertime, 
		in_user_id);
		
	on_jorD_id = on_jorD_id + 1;
 END LOOP;
------------------------------------------------------------------------------------------------------INSERT INTO audit
INSERT INTO grl.tbl_audit(
	id, eventtime, eventtype_id, doctype_id, doc_id, user_id, company_id)
	VALUES (on_audit_id, on_servertime, 31, 10, in_id, in_user_id, in_company_id);
------------------------------------------------------------------------------------------------------Success Return
RETURN QUERY select * from acc.viw_jor_Select where h_id = in_id AND h_company_id = in_company_id AND company_id = in_company_id;
------------------------------------------------------------------------------------------------------EX
EXCEPTION WHEN OTHERS THEN
	GET STACKED DIAGNOSTICS
		ex_sqlstate = RETURNED_SQLSTATE,
		ex_colname = COLUMN_NAME,
		ex_constraintname = CONSTRAINT_NAME,
		ex_datatype = PG_DATATYPE_NAME,
		ex_msgtext = MESSAGE_TEXT,
		ex_tablename = TABLE_NAME,
		ex_schemaname = SCHEMA_NAME,
		ex_details = PG_EXCEPTION_DETAIL,
		ex_hint = PG_EXCEPTION_HINT,
		ex_context = PG_EXCEPTION_CONTEXT;
	DROP TABLE IF EXISTS temp_EX;
	CREATE TEMP TABLE temp_EX as SELECT * from acc.viw_jor_Select where h_id = '0';
	INSERT INTO temp_EX(h_notes)VALUES('PostgreSQL'||','|| ex_id || ',' || ex_sqlstate || ',' || ex_msgtext || ',' || ex_context);
------------------------------------------------------------------------------------------------------INSERT INTO ex
INSERT INTO grl.tbl_ex(
id, sqlstate, colname, constraintname, datatype, msgtext, tablename, schemaname, details, hint, context, extime, company_id, branche_id, store_id, user_id, eventtype_id, doc_id)
VALUES(ex_id, ex_sqlstate, ex_colname, ex_constraintname, ex_datatype, ex_msgtext, ex_tablename, ex_schemaname, ex_details, ex_hint, ex_context, on_servertime, in_company_id, in_branch_id, null, in_user_id,31, in_id);
------------------------------------------------------------------------------------------------------Faild Return
return QUERY select * from temp_EX;
End

$BODY$;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION acc.fnc_jor_delete(
	in_id character varying,
	in_company_id character varying,
	in_user_id character varying)
    RETURNS SETOF acc.viw_jor_select 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

declare 
	on_edit_id integer;
	on_jorD_id integer;
	on_servertime timestamp; 
	on_yyyy text;
	on_yy text;
	on_MM text;
	on_ref text;
	on_jorRefType text;
	on_sequ smallint;
	on_xsequ text;
	on_audit_id bigint;
--------------------------------------------
	ex_id integer;
	ex_sqlstate text;
	ex_colname text; 
	ex_constraintname text; 
	ex_datatype text; 
	ex_msgtext text; 
	ex_tablename text; 
	ex_schemaname text; 
	ex_details text; 
	ex_hint text; 
	ex_context text; 
BEGIN
	ex_id = (select(select max(id) from grl.tbl_ex) + 1); if ex_id is null then ex_id = 1; end if;
	on_edit_id = (select(select max(id) from acc.tbl_joredit) + 1); if on_edit_id is null then on_edit_id = 1; end if;
	on_audit_id = (select(select max(id) from grl.tbl_audit) + 1); if on_audit_id is null then on_audit_id = 1; end if;
	on_servertime = (select(current_timestamp));					 					 
------------------------------------------------------------------------------------------------------INSERT INTO joredit
INSERT INTO acc.tbl_joredit(
	id, jor_id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, editingtime, editservertime, 
	createuser_id, edituser_id, edit, delete)
SELECT on_edit_id, id, sequ, doctype_id, doc_id, currency_id, currencyprice, jortype_id, yyyy, mm, ref, 
	notes, company_id, fyear_id, branch_id, cc1_id, cc2_id, creationtime, createservertime, on_servertime, on_servertime, 
	createuser_id, in_user_id, edit, 1
	FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
	
------------------------------------------------------------------------------------------------------INSERT INTO jordedit
INSERT INTO acc.tbl_jordedit(
	jord_id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref,notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, editingtime, editservertime,createuser_id, edituser_id, edit, delete)
	
SELECT id, jor_id, debit, credit, 
	chart_id, doctype_id, doc_id, currency_id, currencyprice, 
	jortype_id, yyyy, mm, ref, notes, 
	company_id, fyear_id, branch_id, cc1_id, cc2_id, 
	creationtime, createservertime, on_servertime, on_servertime, createuser_id, in_user_id, edit, 1
	FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
	
	
DELETE FROM acc.tbl_jord jd WHERE jd.jor_id = in_id AND jd.company_id = in_company_id;
DELETE FROM acc.tbl_jor j WHERE j.id = in_id AND j.company_id = in_company_id;
------------------------------------------------------------------------------------------------------INSERT INTO audit
INSERT INTO grl.tbl_audit(
	id, eventtime, eventtype_id, doctype_id, doc_id, user_id, company_id)
	VALUES (on_audit_id, on_servertime, 32, 10, in_id, in_user_id, in_company_id);
------------------------------------------------------------------------------------------------------Success Return
RETURN QUERY select * from acc.viw_jor_Select where h_id = in_id AND h_company_id = in_company_id AND company_id = in_company_id;
------------------------------------------------------------------------------------------------------EX
EXCEPTION WHEN OTHERS THEN
	GET STACKED DIAGNOSTICS
		ex_sqlstate = RETURNED_SQLSTATE,
		ex_colname = COLUMN_NAME,
		ex_constraintname = CONSTRAINT_NAME,
		ex_datatype = PG_DATATYPE_NAME,
		ex_msgtext = MESSAGE_TEXT,
		ex_tablename = TABLE_NAME,
		ex_schemaname = SCHEMA_NAME,
		ex_details = PG_EXCEPTION_DETAIL,
		ex_hint = PG_EXCEPTION_HINT,
		ex_context = PG_EXCEPTION_CONTEXT;
	DROP TABLE IF EXISTS temp_EX;
	CREATE TEMP TABLE temp_EX as SELECT * from acc.viw_jor_Select where h_id = '0';
	INSERT INTO temp_EX(h_notes)VALUES('PostgreSQL'||','|| ex_id || ',' || ex_sqlstate || ',' || ex_msgtext || ',' || ex_context);
------------------------------------------------------------------------------------------------------INSERT INTO ex
INSERT INTO grl.tbl_ex(
id, sqlstate, colname, constraintname, datatype, msgtext, tablename, schemaname, details, hint, context, extime, company_id, branche_id, store_id, user_id, eventtype_id, doc_id)
VALUES(ex_id, ex_sqlstate, ex_colname, ex_constraintname, ex_datatype, ex_msgtext, ex_tablename, ex_schemaname, ex_details, ex_hint, ex_context, on_servertime, in_company_id, null, null, in_user_id,32, in_id);
------------------------------------------------------------------------------------------------------Faild Return
return QUERY select * from temp_EX;
End

$BODY$;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------